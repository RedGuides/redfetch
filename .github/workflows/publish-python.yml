# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python

on:
  push:
    branches:
      - main  # or your default branch
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  id-token: write  # Required for PyPI Trusted Publishing

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure full Git history is available for versioning

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Set version for TestPyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          current_version=$(hatch version)
          dev_version="${current_version}.dev$(date +'%Y%m%d%H%M%S')"
          echo "DEV_VERSION=$dev_version" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          hatch test

      - name: Build Package
        run: |
          if [ -n "$DEV_VERSION" ]; then
            hatch version $DEV_VERSION
          fi
          hatch build

      - name: Publish to TestPyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
